name: Server Module Java CI/CD with Maven

on:
  push:
    paths:
      - '**'
      - '.github/workflows/server.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/server

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Maven package
        run: mvn package --file pom.xml

      - name: Build Docker image
        run: docker build --build-arg GITHUB_REPO=${{ github.repository }} -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest .

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: deeeesp
          password: ${{ secrets.TOKEN }}

      - name: Push image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Authenticate and deploy to Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
          KUBE_NAMESPACE: deeeesp
        run: |
          echo "$KUBECONFIG_FILE" > kubeconfig.yaml
          okteto feedback --kubeconfig=kubeconfig.yaml # ensure `okteto` is connected
          okteto exec --kubeconfig=kubeconfig.yaml --namespace=$KUBE_NAMESPACE -- sh -c "
          kubectl delete deployment movie-api-deployment
          kubectl apply -f k8s